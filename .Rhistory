?prop.test
smokers  <- c( 83, 90, 129, 70 )
patients <- c( 86, 93, 136, 82 )
prop.test(smokers, patients)
83/86
prop.test(5, 10)
setwd("Z:\\Dokumente\\Coursera\\Practical Machine Learning")
getwd()
pml <- read.csv("pml-training.csv")
library(dplyr)
library(ggvis)
library(caret)
library(RANN)
pml.dt <- tbl_df(pml)
nums <- pml.dt %>%  sapply(is.numeric)
pml.dt.n <- pml.dt[nums]
pml.dt.f <- pml.dt[!nums]
filled <- pml.dt.f %>% sapply(function(x) sum(x!="")) %>% sapply(function(x) x>10000)
pml.dt.f[filled]
pml.dt.f <- pml.dt.f[filled]
preP <- preProcess(pml.dt.n, method=c("center", "scale", "knnImpute"))
pml.n.pr <- predict(preP, pml.dt.n)
glimpse(pml.n.pr)
pml.clean %>% ggvis(classe~user_name)
pml.clean <- bind_cols(pml.n.pr, pml.dt.f)
pml.clean %>% ggvis(classe~user_name)
View(pml.clean)
View(pml.dt.f)
pml.clean[127]
pml.clean %>% ggvis(classe~user_name)
pml.clean %>% ggvis(classe)
pml.clean %>% ggvis(pml.clean, classe)
ggvis(pml.clean, classe)
ggvis(classe, pml.clean)
ggvis(classe, data=pml.clean)
ggvis(pml.clean$classe)
hist(pml.clean$classe)
hist(pml.clean$classe)
pml.sample <- pml.clean[sample,]
sample <- createDataPartition(y=pml.clean$classe, p=0.01, list=F)
pml.sample <- pml.clean[sample,]
View(pml.dt.f)
dummyVars(classe ~ user_name + new_window, pml.dt.f)
dummies <- dummyVars(classe ~ user_name + new_window, pml.dt.f)
dummies
predict(dummies, newdata = pml.dt.f) %>% head()
pml.f.pr <- predict(dummies, newdata = pml.dt.f) %>% head()
pml.f.pr
pml.f.pr <- predict(dummies, newdata = pml.dt.f)
View(pml.f.pr)
pml.clean <- bind_cols(pml.n.pr, pml.f.pr, pml.dt.f[,c(2,4)])
pml.n.pr
pml.f.pr
pml.f.pr <- df(predict(dummies, newdata = pml.dt.f))
tbl_df(predict(dummies, newdata = pml.dt.f))
str(pml.f.pr)
pml.f.pr <- data.frame(predict(dummies, newdata = pml.dt.f))
pml.clean <- bind_cols(pml.n.pr, pml.f.pr, pml.dt.f[,c(2,4)])
pml.clean[133]
sample <- createDataPartition(y=pml.clean$classe, p=0.01, list=F)
pml.sample <- pml.clean[sample,]
nearZeroVar(pml.clean, saveMetrics = T)
abs(cor(pml.n.pr))
diag(M) <- 0
M <- abs(cor(pml.n.pr))
diag(M) <- 0
which(M > 0.8, arr.ind = T)
preP <- preProcess(pml.dt.n, method=c("center", "scale", "knnImpute", "pca"))
pml.n.pr <- predict(preP, pml.dt.n)
glimpse(pml.n.pr)
pml.clean <- bind_cols(pml.n.pr, pml.f.pr, pml.dt.f[,c(2,4)])
pml.clean[52] #classe
nearZeroVar(pml.clean, saveMetrics = T)
sample <- createDataPartition(y=pml.clean$classe, p=0.01, list=F)
pml.sample <- pml.clean[sample,]
featurePlot(x=pml.sample, y = pml.sample$classe, plot="pairs")
train(classe~., method="rpart", data=pml.sample)
install.packages("rpart")
train(classe~., method="rpart", data=pml.sample)
library(caret)
train(classe~., method="rpart", data=pml.sample)
